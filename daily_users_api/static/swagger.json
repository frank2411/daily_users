{
  "openapi": "3.0.0",
  "info": {
    "title": "Daily Users API",
    "description": "Daily Users API",
    "version": "0.1"
  },
  "servers": [
    {
      "url": "http://localhost:5000/api/v1",
      "description": "Local server for testing"
    }
  ],
  "paths": {
    "/users": {
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ],
        "tags": [
          "users"
        ],
        "summary": "Returns a list of users.",
        "description": "Returns a list of users.",
        "responses": {
          "200": {
            "description": "A JSON array of user objects",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "users": {
                      "type": "array",
                      "items": {
                        "description": "List of user JSON objects",
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Creates a user.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "user created"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "email": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "List of errors occured in creation.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorfield": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "Error detail"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/activate": {
      "post": {
        "security": [
          {
            "basicAuth": []
          }
        ],
        "tags": [
          "user activation"
        ],
        "summary": "Activate a user with given code.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "activation_code": {
                    "type": "integer"
                  }
                },
                "required": [
                  "activation_code"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Activated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "user activated"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "List of errors occured in activation.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorfield": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "Error detail"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/code": {
      "post": {
        "security": [
          {
            "basicAuth": []
          }
        ],
        "tags": [
          "user activation"
        ],
        "summary": "Regenerate code for logged-in ( not activated ) user.",
        "responses": {
          "200": {
            "description": "Code regenerated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "code regenerated"
                    },
                    "code": {
                      "type": "integer",
                      "description": "code"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request, user already active.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Account has already been activated"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ],
        "tags": [
          "users"
        ],
        "summary": "Returns a user by ID. If it exists.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "User id to get.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "email": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not foud.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "User not found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "security": [
          {
            "basicAuth": []
          }
        ],
        "tags": [
          "users"
        ],
        "summary": "Update a users.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "User id to update.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "email": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "user": {
                      "description": "updated user object",
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "List of errors occured in creation.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorfield": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "Error detail"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "basicAuth": []
          }
        ],
        "tags": [
          "users"
        ],
        "summary": "Delete a user.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "User id to get.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not foud.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "User not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/change-password": {
      "post": {
        "security": [
          {
            "basicAuth": []
          }
        ],
        "tags": [
          "users"
        ],
        "summary": "Updates a user password.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "old_password": {
                    "type": "string"
                  },
                  "new_password": {
                    "type": "string"
                  },
                  "new_password_confirm": {
                    "type": "string"
                  }
                },
                "required": [
                  "old_password",
                  "new_password",
                  "new_password_confirm"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "password updated"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "List of errors occured in update.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorfield": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "Error detail"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/reset-password": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Request the Reset of a user password. ( THE MAIL SENDING IS FAKE. It's just for showing :) )",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  }
                },
                "required": [
                  "email"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Request sended",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Request sended"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "List of errors occured in reset.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorfield": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "Error detail"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/reset-password/{token}": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Validates a user password reset token.",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "description": "Token to reset password.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Token is valid. This endpoint just validates a token.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Request sended"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Error. User does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "error detail"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "users"
        ],
        "summary": "Resets the user password.",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "description": "Token to reset password.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Password reset OK.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Passwod reset ok"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Error. User does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "error detail"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/me": {
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ],
        "tags": [
          "users me"
        ],
        "summary": "Get me.",
        "responses": {
          "200": {
            "description": "Get me as JSON object",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "email": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "basicAuth": {
        "type": "http",
        "scheme": "basic"
      }
    }
  }
}